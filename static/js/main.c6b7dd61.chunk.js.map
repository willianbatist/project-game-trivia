{"version":3,"sources":["trivia.png","redux/actions/index.js","services/tokenApi.js","pages/Login.js","components/Header.js","services/triviaApi.js","consts/index.js","pages/Game.js","pages/Settings.js","pages/Feedback.js","pages/Ranking.js","App.js","redux/reducers/Player.js","redux/reducers/Token.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["module","exports","tokenAction","state","type","token","playerAction","player","scoreAction","score","assertions","requestToken","a","fetch","response","json","data","Login","handleButton","callback","setState","localStorage","setItem","props","history","push","roteSettings","name","gravatarEmail","handleInput","bind","target","id","value","this","handleClick","className","data-testid","onClick","src","logo","alt","htmlFor","placeholder","onChange","disabled","Component","connect","dispatch","Header","convertEmail","emailHash","md5","toString","fetchQuestions","url","console","error","CLASS_BTN","Game","getQuestions","renewToken","currQues","triviaApi","apiReturn","response_code","newToken","newApiReturn","results","incorrectAnswers","incorrect_answers","correctAnswer","correct_answer","difficulty","difScore","currAnswers","sort","Math","random","handleTimer","clearInterval","handleCounter","setInterval","prevState","time","isDisabled","answered","document","getElementsByClassName","global","forEach","button","classList","add","answerButton","updateScore","allButtons","dataset","testid","redToFeedback","nextQuestion","remove","indexOf","isFetching","length","category","question","map","answer","i","key","match","Settings","Feedback","resultsHandler","scoreFeedback","playAgain","resetGame","toRankingPage","resetS","resetA","resetP","Ranking","handleRanking","picture","getItem","JSON","stringify","parse","ranking","goHome","b","App","exact","path","component","INITIAL_STATE","playerReducer","action","tokenReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","window","Cypress","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c6b7dd61.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trivia.466d153e.png\";","export const LOG_IN = 'LOG_IN';\nexport const TOKEN = 'TOKEN';\nexport const SCORE = 'SCORE';\n\nexport const tokenAction = (state) => ({\n  type: TOKEN,\n  token: state,\n});\n\nexport const playerAction = (state) => ({\n  type: LOG_IN,\n  player: state,\n});\n\nexport const scoreAction = (score, assertions) => ({\n  type: SCORE,\n  score,\n  assertions,\n});\n","const link = 'https://opentdb.com/api_token.php?command=request';\nconst requestToken = async () => {\n  try {\n    const response = await fetch(link);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport default requestToken;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { tokenAction, playerAction } from '../redux/actions';\nimport requestToken from '../services/tokenApi';\nimport logo from '../trivia.png';\nimport './style/Login.css';\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      token: '',\n      name: '',\n      assertions: 0,\n      score: 0,\n      gravatarEmail: '',\n    };\n\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleButton = async (callback) => {\n    const data = await requestToken();\n    this.setState({ token: data.token }, () => {\n      callback(this.state);\n    });\n    localStorage.setItem('token', data.token);\n    const { history } = this.props;\n    history.push('/game');\n  }\n\n  roteSettings = () => {\n    const { history } = this.props;\n    history.push('/settings');\n  }\n\n  handleInput({ target }) {\n    const { id, value } = target;\n\n    this.setState({\n      [id]: value,\n    });\n  }\n\n  render() {\n    const { name, gravatarEmail } = this.state;\n    const { handleClick } = this.props;\n    return (\n      <div className=\"login\">\n        <button\n          type=\"button\"\n          data-testid=\"btn-settings\"\n          onClick={ () => this.roteSettings() }\n          className=\"form__button\"\n        >\n          Settings\n        </button>\n        <form className=\"form\">\n          <img src={ logo } className=\"App-logo\" alt=\"logo\" />\n          <label htmlFor=\"name\" className=\"form__label\">\n            <input\n              id=\"name\"\n              data-testid=\"input-player-name\"\n              placeholder=\"Name\"\n              value={ name }\n              onChange={ this.handleInput }\n              className=\"form__label__input\"\n            />\n          </label>\n          <label htmlFor=\"email\" className=\"form__label\">\n            <input\n              id=\"gravatarEmail\"\n              data-testid=\"input-gravatar-email\"\n              placeholder=\"Email\"\n              value={ gravatarEmail }\n              onChange={ this.handleInput }\n              className=\"form__label__input\"\n            />\n          </label>\n          <button\n            type=\"button\"\n            data-testid=\"btn-play\"\n            disabled={ !name || !gravatarEmail }\n            onClick={ () => this.handleButton(handleClick) }\n            className=\"form__button\"\n          >\n            Play!\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  handleClick(state) {\n    dispatch(playerAction(state));\n    dispatch(tokenAction(state.token));\n  },\n});\n\nLogin.propTypes = {\n  handleClick: PropTypes.func,\n  push: PropTypes.func,\n}.isRequired;\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport md5 from 'crypto-js/md5';\nimport '../pages/style/Header.css';\n\nclass Header extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      emailHash: '',\n    };\n  }\n\n  componentDidMount() {\n    this.convertEmail();\n  }\n\n  convertEmail = () => {\n    const { gravatarEmail } = this.props;\n    this.setState({ emailHash: md5(gravatarEmail).toString() });\n  }\n\n  render() {\n    const { name, score } = this.props;\n    const { emailHash } = this.state;\n\n    return (\n      <header className=\"header\">\n        <img\n          data-testid=\"header-profile-picture\"\n          alt=\"profile_image\"\n          src={ `https://www.gravatar.com/avatar/${emailHash}` }\n        />\n        <h1 className=\"name\">\n          Player:\n          {' '}\n          <span data-testid=\"header-player-name\">{ name }</span>\n        </h1>\n        <h2 className=\"score\">\n          Score:\n          {' '}\n          <span data-testid=\"header-score\">{ score }</span>\n        </h2>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  name: propTypes.string,\n  gravatarEmail: propTypes.string,\n  assertions: propTypes.number,\n  score: propTypes.number,\n}.isRequired;\n\nconst mapStateToProps = (state) => {\n  const { player: { name, gravatarEmail, assertions, score } } = state;\n  return {\n    name, gravatarEmail, assertions, score,\n  };\n};\n\nexport default connect(mapStateToProps)(Header);\n","const fetchQuestions = async (token) => {\n  try {\n    const url = `https://opentdb.com/api.php?amount=5&token=${token}`;\n    const response = await fetch(url);\n    const data = response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport default fetchQuestions;\n","export const ERROR_RESPONSE = 3;\nexport const QUESTIONS_LENGTH = 5;\nexport const RANDOM_ASSIST = 0.5;\nexport const INDEXOF_ASSIST = -1;\nexport const MIL = 1000;\nexport const LOADING = 'Loading...';\nexport const CORRECT_ANSWER = 'correct-answer';\nexport const BASE_SCORE = 10;\nexport const EASY_SCORE = 1;\nexport const MEDIUM_SCORE = 2;\nexport const HARD_SCORE = 3;\nexport const CLASS_BTN = 'game-main__answer-section__answer';\nexport const ASSERTIONS = 3;\n","import propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Header from '../components/Header';\nimport triviaApi from '../services/triviaApi';\nimport { tokenAction, scoreAction } from '../redux/actions';\nimport requestToken from '../services/tokenApi';\nimport * as global from '../consts';\nimport './style/Game.css';\n\nclass Game extends Component {\n  constructor() {\n    super();\n    this.state = { apiReturn: [],\n      currAnswers: [],\n      currQues: 0,\n      time: 30,\n      isDisabled: false,\n      score: 0,\n      assertions: 0,\n      difScore: 0,\n      answered: false };\n  }\n\n  componentDidMount() {\n    this.getQuestions();\n    this.handleTimer();\n  }\n\n  getQuestions = async () => {\n    const { token, renewToken } = this.props;\n    const { currQues } = this.state;\n    const apiReturn = await triviaApi(token);\n\n    if (apiReturn.response_code === global.ERROR_RESPONSE) {\n      const newToken = await requestToken();\n      const newApiReturn = await triviaApi(newToken.token);\n      const { results } = newApiReturn;\n      const incorrectAnswers = results[currQues].incorrect_answers;\n      const correctAnswer = results[currQues].correct_answer;\n\n      if (results[currQues].difficulty === 'easy') {\n        this.setState({ difScore: global.EASY_SCORE });\n      } else if (results[currQues].difficulty === 'medium') {\n        this.setState({ difScore: global.MEDIUM_SCORE });\n      } else if (results[currQues].difficulty === 'hard') {\n        this.setState({ difScore: global.HARD_SCORE });\n      }\n      this.setState({\n        apiReturn: newApiReturn.results,\n        currAnswers: [...incorrectAnswers, correctAnswer]\n          .sort(() => Math.random() - global.RANDOM_ASSIST),\n      });\n      renewToken(newToken);\n    } else {\n      const { results } = apiReturn;\n      const incorrectAnswers = results[currQues].incorrect_answers;\n      const correctAnswer = results[currQues].correct_answer;\n\n      if (results[currQues].difficulty === 'easy') {\n        this.setState({ difScore: global.EASY_SCORE });\n      } else if (results[currQues].difficulty === 'medium') {\n        this.setState({ difScore: global.MEDIUM_SCORE });\n      } else if (results[currQues].difficulty === 'hard') {\n        this.setState({ difScore: global.HARD_SCORE });\n      }\n      this.setState({\n        apiReturn: apiReturn.results,\n        currAnswers: [...incorrectAnswers, correctAnswer]\n          .sort(() => Math.random() - global.RANDOM_ASSIST),\n      });\n    }\n  }\n\n  handleTimer = () => {\n    clearInterval(this.handleCounter);\n    this.handleCounter = setInterval(() => {\n      this.setState((prevState) => ({ time: prevState.time - 1 }));\n      const { time } = this.state;\n      if (time === 0) {\n        clearInterval(this.handleCounter);\n        this.setState({ isDisabled: true, time: 30, answered: true }, () => {\n          const allButtons = [...document\n            .getElementsByClassName(global.CLASS_BTN)];\n          allButtons.forEach((button) => button.classList.add('wrong'));\n        });\n      }\n    }, global.MIL);\n  };\n\n  answerButton = ({ target }) => {\n    const { updateScore } = this.props;\n    const { time } = this.state;\n    const allButtons = [...document.getElementsByClassName(global.CLASS_BTN)];\n    this.setState({ isDisabled: true });\n    if (target.dataset.testid === global.CORRECT_ANSWER) {\n      const { difScore } = this.state;\n      this.setState((prevState) => ({\n        score: prevState.score + (global.BASE_SCORE + (time * difScore)),\n        assertions: prevState.assertions + 1,\n      }), () => {\n        const { score, assertions } = this.state;\n        updateScore(score, assertions);\n        localStorage.setItem('score', score);\n      });\n    }\n    allButtons.forEach((button) => {\n      if (button.dataset.testid === global.CORRECT_ANSWER) {\n        button.classList.add('correct');\n      } else { button.classList.add('wrong'); }\n    });\n    this.setState({ answered: true });\n    clearInterval(this.handleCounter);\n  }\n\n  redToFeedback = () => {\n    const { history } = this.props;\n    localStorage.setItem('score', 0);\n    history.push('/feedback');\n  }\n\n  nextQuestion = () => {\n    this.setState((prevState) => ({\n      answered: false,\n      currQues: prevState.currQues + 1,\n      isDisabled: false,\n    }), () => {\n      const { currQues } = this.state;\n      const { apiReturn } = this.state;\n      const incorrectAnswers = apiReturn[currQues].incorrect_answers;\n      const correctAnswer = apiReturn[currQues].correct_answer;\n      this.setState({\n        currAnswers: [...incorrectAnswers, correctAnswer]\n          .sort(() => Math.random() - global.RANDOM_ASSIST),\n      });\n    });\n    const allButtons = [...document\n      .getElementsByClassName('game-main__answer-section__answer')];\n\n    allButtons.forEach((button) => {\n      if (button.dataset.testid === 'correct-answer') {\n        button.classList.remove('correct');\n      } else if (button.dataset.testid.indexOf('wrong') > global.INDEXOF_ASSIST) {\n        button.classList.remove('wrong');\n      }\n    });\n    this.setState({ time: 30 }, () => this.handleTimer());\n  }\n\n  render() {\n    const { apiReturn, currQues, currAnswers, isDisabled, time, answered } = this.state;\n    const isFetching = !apiReturn.length > 0;\n\n    return (\n      <div className=\"game\">\n        <Header />\n        {\n          isFetching\n            ? <h1 className=\"game-loading\">{global.LOADING}</h1>\n            : (\n              <main className=\"game-main\">\n                <h4\n                  data-testid=\"question-category\"\n                  className=\"game-main__category\"\n                >\n                  {apiReturn[currQues].category}\n                </h4>\n                <h3\n                  data-testid=\"question-text\"\n                  className=\"game-main__question\"\n                >\n                  {apiReturn[currQues].question}\n                </h3>\n                <section\n                  data-testid=\"answer-options\"\n                  className=\"game-main__answers-section\"\n                >\n                  {currAnswers\n                    .map((answer, i) => (\n                      <button\n                        type=\"button\"\n                        key={ i }\n                        data-testid={\n                          answer.match(apiReturn[currQues].correct_answer)\n                            ? 'correct-answer'\n                            : `wrong-answer-${i}`\n                        }\n                        className=\"game-main__answer-section__answer\"\n                        disabled={ isDisabled }\n                        onClick={ this.answerButton }\n                      >\n                        {answer}\n                      </button>\n                    ))}\n                </section>\n                { answered\n                && (currQues < global.QUESTIONS_LENGTH - 1\n                  ? (\n                    <button\n                      type=\"button\"\n                      data-testid=\"btn-next\"\n                      className=\"game-main__next-button\"\n                      onClick={ this.nextQuestion }\n                    >\n                      Próxima questão\n                    </button>)\n                  : (\n                    <button\n                      type=\"button\"\n                      data-testid=\"btn-next\"\n                      className=\"game-main__next-button\"\n                      onClick={ this.redToFeedback }\n                    >\n                      Feedback final\n                    </button>))}\n              </main>\n            )\n        }\n        <footer className=\"footerTime\">\n          <h4>{ `Timer:  ${time}`}</h4>\n        </footer>\n      </div>\n    );\n  }\n}\n\nGame.propTypes = {\n  renewToken: propTypes.func,\n  token: propTypes.object,\n}.isRequired;\n\nconst mapStateToProps = (state) => {\n  const { token, player: { score } } = state;\n  return { token, score };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  renewToken(token) { dispatch(tokenAction(token)); },\n  updateScore(score, assertions) { dispatch(scoreAction(score, assertions)); },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n","import React, { Component } from 'react';\n\nexport default class Settings extends Component {\n  render() {\n    return (\n      <div data-testid=\"settings-title\" className=\"settings\">\n        <h1 className=\"headerSettings\">Settings</h1>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { playerAction, scoreAction } from '../redux/actions';\nimport * as global from '../consts';\nimport './style/Feedback.css';\nimport Header from '../components/Header';\n\nclass Feedback extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      scoreFeedback: '',\n    };\n  }\n\n  componentDidMount() {\n    this.resultsHandler();\n  }\n\n  resultsHandler = () => {\n    const { assertions } = this.props;\n\n    if (assertions < global.ASSERTIONS) {\n      this.setState({ scoreFeedback: 'Could be better...' });\n    } else if (assertions >= global.ASSERTIONS) {\n      this.setState({ scoreFeedback: 'Well Done!' });\n    }\n  }\n\n  playAgain = () => {\n    const { history, resetGame } = this.props;\n    resetGame(0, 0, {});\n    history.push('/');\n  }\n\n  toRankingPage = () => {\n    const { history } = this.props;\n    history.push('/ranking');\n  }\n\n  render() {\n    const { scoreFeedback } = this.state;\n    const { score, assertions } = this.props;\n    return (\n      <div className=\"feedback\">\n        <Header />\n        <section className=\"container\">\n          <h1>\n            Score:\n            {' '}\n            <span data-testid=\"feedback-total-score\">{score}</span>\n          </h1>\n          <h1>\n            Assertions:\n            {' '}\n            <span data-testid=\"feedback-total-question\">{assertions}</span>\n          </h1>\n          <h1 data-testid=\"feedback-text\">\n            { scoreFeedback }\n          </h1>\n          <button\n            className=\"btn\"\n            type=\"button\"\n            data-testid=\"btn-ranking\"\n            onClick={ this.toRankingPage }\n          >\n            Ranking\n          </button>\n          <button\n            className=\"btn\"\n            type=\"button\"\n            data-testid=\"btn-play-again\"\n            onClick={ this.playAgain }\n          >\n            Play again!\n          </button>\n        </section>\n      </div>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  score: propTypes.number,\n  assertions: propTypes.number,\n  resetGame: propTypes.func,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  score: state.player.score,\n  assertions: state.player.assertions,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  resetGame(resetS, resetA, resetP) {\n    dispatch(scoreAction(resetS, resetA));\n    dispatch(playerAction(resetP));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Feedback);\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport md5 from 'crypto-js/md5';\nimport { playerAction, scoreAction } from '../redux/actions';\nimport './style/Ranking.css';\n\nclass Ranking extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      ranking: [],\n    };\n  }\n\n  componentDidMount() {\n    this.handleRanking();\n  }\n\n  handleRanking = async () => {\n    const { name, score, picture } = this.props;\n\n    if (name) {\n      if (localStorage.getItem('ranking')) {\n        localStorage.setItem('ranking', JSON.stringify(\n          [\n            ...JSON.parse(localStorage.getItem('ranking')),\n            {\n              name, score, picture,\n            },\n          ],\n        ));\n      } else {\n        localStorage.setItem('ranking', JSON.stringify(\n          [\n            {\n              name, score, picture,\n            },\n          ],\n        ));\n      }\n    }\n    this.setState({ ranking: JSON.parse(localStorage.getItem('ranking')) });\n  }\n\n  goHome = () => {\n    const { history, resetGame } = this.props;\n    resetGame(0, 0, {});\n    history.push('/');\n  }\n\n  render() {\n    const { ranking } = this.state;\n    return (\n      <div className=\"ranking\">\n        <section className=\"container\">\n          <h1 data-testid=\"ranking-title\">Ranking</h1>\n          <ul className=\"ranking-players\">\n            {ranking.sort((a, b) => b.score - a.score).map((player, i) => (\n              <li key={ i }>\n                <h4>\n                  Name:\n                  {' '}\n                  <span data-testid={ `player-name-${i}` }>{player.name}</span>\n                </h4>\n                <h4>\n                  Score:\n                  {' '}\n                  <span data-testid={ `player-score-${i}` }>{player.score}</span>\n                </h4>\n              </li>\n            ))}\n          </ul>\n          <button\n            type=\"button\"\n            data-testid=\"btn-go-home\"\n            className=\"btn\"\n            onClick={ this.goHome }\n          >\n            Home\n          </button>\n        </section>\n      </div>\n    );\n  }\n}\n\nRanking.propTypes = {\n  score: propTypes.number,\n  assertions: propTypes.number,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  name: state.player.name,\n  score: state.player.score,\n  assertions: state.player.assertions,\n  picture: `${md5(state.player.assertions).toString()}`,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  resetGame(resetS, resetA, resetP) {\n    dispatch(scoreAction(resetS, resetA));\n    dispatch(playerAction(resetP));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Ranking);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Game from './pages/Game';\nimport Settings from './pages/Settings';\nimport Feedback from './pages/Feedback';\nimport Ranking from './pages/Ranking';\nimport './App.css';\n\nexport default function App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={ Login } />\n      <Route exact path=\"/game\" component={ Game } />\n      <Route exact path=\"/settings\" component={ Settings } />\n      <Route exact path=\"/feedback\" component={ Feedback } />\n      <Route exact path=\"/ranking\" component={ Ranking } />\n    </Switch>\n  );\n}\n","import { LOG_IN, SCORE } from '../actions';\n\nconst INITIAL_STATE = {\n  player: {\n    name: '',\n    assertions: 0,\n    score: 0,\n    gravatarEmail: '',\n  },\n};\n\nconst playerReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case LOG_IN:\n    return action.player;\n  case SCORE:\n    return {\n      ...state,\n      score: action.score,\n      assertions: action.assertions,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default playerReducer;\n","import { TOKEN } from '../actions';\n\nconst INITIAL_STATE = {\n  token: '',\n};\n\nconst tokenReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case TOKEN:\n    return action.token;\n  default:\n    return state;\n  }\n};\n\nexport default tokenReducer;\n","import { combineReducers } from 'redux';\nimport playerReducer from './Player';\nimport tokenReducer from './Token';\n\nconst rootReducer = combineReducers({\n  player: playerReducer,\n  token: tokenReducer,\n});\n\nexport default rootReducer;\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nif (window.Cypress) {\n  window.store = store;\n}\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Router>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}